name: Publish Release to GitBook

on:
  release:
    types: [published]

jobs:
  publish-to-gitbook:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Get Release Info
        id: get_release
        run: |
          # Obtener información detallada del release
          RELEASE_INFO=$(curl -s -X GET \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.event.release.tag_name }}")
          
          # Extraer la información necesaria del release
          RELEASE_TAG=$(echo "$RELEASE_INFO" | jq -r '.tag_name')
          RELEASE_BODY=$(echo "$RELEASE_INFO" | jq -r '.body')
          RELEASE_NAME=$(echo "$RELEASE_INFO" | jq -r '.name')
          
          echo "$RELEASE_TAG"
          
          # Crear el contenido en formato Markdown
          CONTENT=$(cat << EOF
          # Release $RELEASE_TAG
          
          $RELEASE_BODY
          EOF
          )
          
          # Crear el payload para GitBook
          GITBOOK_PAYLOAD=$(jq -n \
            --arg url "https://github.com/${{ github.repository }}/releases/tag/${{ github.event.release.tag_name }}" \
            --arg content "$CONTENT" \
            --arg title "$RELEASE_TAG" \
            '{
              "url": $url,
              "source": "website",
              "content": {
                "type": "markdown",
                "data": {
                  "title": $title,
                  "body": $content
                }
              }
            }')
          
          echo "GITBOOK_PAYLOAD<<EOF" >> $GITHUB_ENV
          echo "$GITBOOK_PAYLOAD" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          response=$(curl -s -X POST \
            "https://api.gitbook.com/v1/spaces/${{ secrets.GITBOOK_SPACE_ID }}/content/import" \
            -H "Authorization: Bearer ${{ secrets.GITBOOK_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "$GITBOOK_PAYLOAD")
          
          echo "GitBook API Response: $response"
          
          if echo "$response" | grep -q '"error"'; then
            echo "Error in GitBook API request: $response"
            exit 1
          fi