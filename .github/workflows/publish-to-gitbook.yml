name: Publish to GitBook

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21'

      - name: Install dependencies
        run: npm install

      - name: Process and Publish to GitBook
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITBOOK_API_TOKEN: ${{ secrets.GITBOOK_API_TOKEN }}
          GITBOOK_SPACE_ID: ${{ secrets.GITBOOK_SPACE_ID }}
        run: |
          # 1. Obtener datos del release
          RELEASE_DATA=$(curl -sSL \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.event.release.tag_name }}")
          
          # 2. Extraer informaciÃ³n relevante
          TAG_NAME=$(echo "$RELEASE_DATA" | jq -r '.tag_name')
          BODY=$(echo "$RELEASE_DATA" | jq -r '.body')
          
          # 3. Crear contenido en formato Markdown
          MARKDOWN_CONTENT="https://github.com/${{ github.repository }}/releases/tag/${{ github.event.release.tag_name }}"
          
          # 4. Crear payload para GitBook
          GITBOOK_PAYLOAD=$(jq -n \
          --arg title "$TAG_NAME" \
          --arg content "$MARKDOWN_CONTENT" \
          '{
            "source": "markdown",
            "url": $content,
            "title": $title
          }')
          
          echo "Payload for GitBook:"
          echo "$GITBOOK_PAYLOAD"
          
          # 5. Enviar a GitBook
          response=$(curl -s -X POST \
            "https://api.gitbook.com/v1/spaces/${{ secrets.GITBOOK_SPACE_ID }}/content/import" \
            -H "Authorization: Bearer ${{ secrets.GITBOOK_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "$GITBOOK_PAYLOAD")
          
          echo "GitBook API Response:"
          echo "$response"
          
          if echo "$response" | jq -e '.error' > /dev/null; then
            echo "Error in GitBook API request: $response"
            exit 1
          fi