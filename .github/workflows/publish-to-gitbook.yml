name: Publish to GitBook

on:
  release:
    types:
      - created
      - published

permissions:
  contents: read
  actions: read

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Debug Event
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Event action: ${{ github.event.action }}"
          echo "Release tag: ${{ github.event.release.tag_name }}"
          
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get latest release
        id: get_release
        run: |
          RELEASE_TAG=$(curl -s \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/latest" | \
            jq -r '.tag_name')
          echo "::set-output name=tag::$RELEASE_TAG"

          CHANGELOG_URL="https://raw.githubusercontent.com/${{ github.repository }}/${{ steps.get_release.outputs.tag }}/CHANGELOG.md"
          GITBOOK_PAYLOAD=$(jq -n \
            --arg title "${{ steps.get_release.outputs.tag }}" \
            --arg url "$CHANGELOG_URL" \
            '{
              "source": "markdown",
              "url": $url,
              "title": $title
            }')
          
          echo "Payload for GitBook:"
          echo "$GITBOOK_PAYLOAD"
          
          response=$(curl -s -X POST \
            "https://api.gitbook.com/v1/spaces/${{ secrets.GITBOOK_SPACE_ID }}/content/import" \
            -H "Authorization: Bearer ${{ secrets.GITBOOK_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "$GITBOOK_PAYLOAD")
          
          echo "GitBook API Response:"
          echo "$response"
          
          if echo "$response" | jq -e '.error' > /dev/null; then
            echo "Error in GitBook API request: $response"
            exit 1
          fi