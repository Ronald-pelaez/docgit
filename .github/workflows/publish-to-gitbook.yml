name: Publish Release to GitBook

on:
  release:
    types: [published]

jobs:
  publish-to-gitbook:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Process and Publish to GitBook
        run: |
          # 1. Construir la URL de la API
          API_URL="https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.event.release.tag_name }}"
          
          # 2. Obtener datos del release de GitHub
          RELEASE_DATA=$(curl -sSL \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "$API_URL")
          
          echo "Release data from GitHub:"
          echo "$RELEASE_DATA"
          
          # 3. Crear el payload para GitBook usando la URL de la API
          GITBOOK_PAYLOAD=$(jq -n \
            --argjson release "$RELEASE_DATA" \
            --arg api_url "$API_URL" \
            '{
              "url": $api_url,
              "source": "website",
              "importedResources": 1,
              "totalResources": 1,
              "content": {
                "type": "github_release",
                "data": $release
              }
            }')
          
          echo "Payload for GitBook:"
          echo "$GITBOOK_PAYLOAD"
          
          # 4. Enviar a GitBook
          response=$(curl -v -X POST \
            "https://api.gitbook.com/v1/spaces/${{ secrets.GITBOOK_SPACE_ID }}/content/import" \
            -H "Authorization: Bearer ${{ secrets.GITBOOK_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "$GITBOOK_PAYLOAD")
          
          echo "GitBook API Response:"
          echo "$response"
          
          if echo "$response" | grep -q '"error"'; then
            echo "Error in GitBook API request: $response"
            exit 1
          fi